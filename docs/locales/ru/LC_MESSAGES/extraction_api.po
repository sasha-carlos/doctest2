# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, NtechLab
# This file is distributed under the same license as the FindFace Enterprise
# Server SDK package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
# Sasha Carlos <info@ntechlab.com>, 2017.
msgid ""
msgstr ""
"Project-Id-Version: FindFace Enterprise Server SDK 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-16 13:09+0300\n"
"PO-Revision-Date: 2017-11-08 16:10+0300\n"
"Last-Translator: Sasha Carlos <info@ntechlab.com>\n"
"Language: ru\n"
"Language-Team: NtechLab Documentation Team\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../source/extraction_api.rst:4
msgid "Extraction API"
msgstr "Extraction API"

#: ../source/extraction_api.rst:6
msgid ""
"With the ``Extraction API`` component, you can flexibly configure the "
"format of API responses to extract various face data, including the "
"bounding box coordinates, normalized face, gender, age, and emotions, as "
"well as the face feature vector (facen). Implementing this feature to "
"your system can remarkably broaden the scope of analytic tasks it is "
"capable of fulfilling."
msgstr ""

#: ../source/extraction_api.rst:11
msgid ""
"Being a ``findface-facenapi`` counterpart when it comes to data "
"extraction via API, ``Extraction API`` is more resource-demanding. The "
"component cannot fully substitute ``findface-facenapi`` as it doesn't "
"allow adding faces and working with the database."
msgstr ""

#: ../source/extraction_api.rst:14
msgid ""
"You can also :ref:`use <extract-facens>` ``Extraction API`` as a facen "
"extractor, i. e. as an alternative to ``findface-nnapi``."
msgstr ""

#: ../source/extraction_api.rst:17
msgid ""
"Encoded in base64 normalized images received from the Extraction API "
"component are qualified for posting to findface-facenapi."
msgstr ""

#: ../source/extraction_api.rst:20
msgid "In this section:"
msgstr ""

#: ../source/extraction_api.rst:26
msgid "Install Extraction API"
msgstr ""

#: ../source/extraction_api.rst:28
msgid ""
"To install and configure the ``Extraction API`` component, do the "
"following:"
msgstr ""

#: ../source/extraction_api.rst:31
msgid ""
"``Extraction API`` requires the packages with :ref:`models <models>` "
":program:`<findface-data>.deb`. Make sure they have been installed."
msgstr ""

#: ../source/extraction_api.rst:33
msgid "Install the component."
msgstr ""

#: ../source/extraction_api.rst:39
msgid "Open the ``findface-extraction-api.ini`` configuration file."
msgstr ""

#: ../source/extraction_api.rst:45
msgid "If :ref:`NTLS <licensing>` is remote, specify its IP address."
msgstr ""

#: ../source/extraction_api.rst:51
msgid ""
"Configure other parameters if needed. For example, enable or disable "
"fetching Internet images."
msgstr ""

#: ../source/extraction_api.rst:59
msgid ""
"The ``min_face_size`` and ``max_face_size`` parameters do not work as "
"filters. They rather indicate the guaranteed detection interval. Pick up "
"their values carefully as these parameters affect performance."
msgstr ""

#: ../source/extraction_api.rst:67
msgid ""
"The ``model_instances`` parameter indicates how many instances of each "
"enabled face detector (``nnd``, ``legacy`` or ``prenormalized``) and each"
" enabled model (``facen``, ``gender``, ``age``, ``emotions``) run "
"concurrently. The default value (0) means that this number is equal to "
"the number of CPU cores. If it severely affects RAM consumption (for "
"example, extraction-api fails), adjust the parameter value."
msgstr ""

#: ../source/extraction_api.rst:73
msgid ""
"To estimate the face quality, enable the ``quality_estimator``. In this "
"case, ``extraction-api`` will return the quality score in the "
":ref:`detection_score <detection_score>` parameter."
msgstr ""

#: ../source/extraction_api.rst:76
msgid ""
"Interpret the quality score further in analytics. Upright faces in "
"frontal position are considered the best quality. They result in values "
"around ``0``, mostly negative (such as ``-0.00067401276``, for example). "
"Inverted faces and large face angles are estimated with negative values "
"some ``-5`` and less."
msgstr ""

#: ../source/extraction_api.rst:82
msgid "Enable the ``Extraction API`` service autostart and lauch the service."
msgstr ""

#: ../source/extraction_api.rst:89
msgid "API Requests"
msgstr ""

#: ../source/extraction_api.rst:91
msgid ""
"The Extraction API component accepts POST requests to \\ "
"http://127.0.0.1:18666/."
msgstr ""

#: ../source/extraction_api.rst:94
msgid "There are 2 ways to format the request body:"
msgstr ""

#: ../source/extraction_api.rst:96
msgid "``application/json``: the request body contains only JSON."
msgstr ""

#: ../source/extraction_api.rst:97
msgid ""
"``multipart/form-data``: the request body contains a JSON part with the "
"request itself, other body parts are used for image transfer."
msgstr ""

#: ../source/extraction_api.rst:99
msgid "The JSON part of the request body contains a set of requests:"
msgstr ""

#: ../source/extraction_api.rst:107
msgid ""
"Each request in the set applies to a specific image or region in the "
"image and accepts the following parameters:"
msgstr ""

#: ../source/extraction_api.rst:110
msgid ""
"``\"image\"``: an uploaded image (use ``multipart:part`` to refer to a "
"relevant request body ``part``), or a publicly accessible image URL   "
"(``http:``, ``https:``)."
msgstr ""

#: ../source/extraction_api.rst:111
msgid ""
"``\"roi\"``: a region of interest in the image. If the region is not "
"specified, the entire image is processed."
msgstr ""

#: ../source/extraction_api.rst:112
msgid ""
"``\"detector\"``: a face detector to apply to the image (``legacy``, "
"``nnd`` or ``prenormalized``). The ``prenormalized`` mode accepts "
"normalized face images and omits detecting faces. Use ``nnd`` if you need"
" to estimate the face quality (``\"quality_estimator\": true``)."
msgstr ""

#: ../source/extraction_api.rst:113
msgid "``\"need_facen\"``: if true, the request returns a facen in the response."
msgstr ""

#: ../source/extraction_api.rst:114
msgid "``\"need_gender\"``: returns gender."
msgstr ""

#: ../source/extraction_api.rst:115
msgid "``\"need_emotions\"``: returns emotions."
msgstr ""

#: ../source/extraction_api.rst:116
msgid "``\"need_age\"``: returns age."
msgstr ""

#: ../source/extraction_api.rst:117
msgid ""
"``\"need_normalized\"``: returns a normalized face image encoded in "
"base64. The normalized image can then be posted again to the ``Extraction"
" API`` component as \"prenormalized\"."
msgstr ""

#: ../source/extraction_api.rst:118
msgid ""
"``\"auto_rotate\"``: if true, auto-rotates an original image to 4 "
"different orientations and returns faces detected in each orientation. "
"Works only if ``\"detector\": \"nnd\"`` and ``\"quality_estimator\": "
"true``."
msgstr ""

#: ../source/extraction_api.rst:135
msgid "API Response Format"
msgstr ""

#: ../source/extraction_api.rst:137
msgid ""
"A typical response from the Extraction API component contains a set of "
"responses to the requests wrapped into the main API request:"
msgstr ""

#: ../source/extraction_api.rst:146
msgid "Each response in the set contains the following JSON data:"
msgstr ""

#: ../source/extraction_api.rst:148
msgid ""
"``\"faces\"``: a set of faces detected in the provided image or region of"
" interest."
msgstr ""

#: ../source/extraction_api.rst:149
msgid ""
"``\"error\"``: an error occurred during processing (if any). The error "
"body includes the error code which can be interpreted automatically "
"(``\"code\"``) and a human-readable description (``\"desc\"``)."
msgstr ""

#: ../source/extraction_api.rst:161
msgid "Each face in the set is provided with the following data:"
msgstr ""

#: ../source/extraction_api.rst:165
msgid "``\"bbox\"``: coordinates of a bounding box with the face."
msgstr ""

#: ../source/extraction_api.rst:166
msgid ""
"``\"detection_score\"``: either the face detection accuracy, or the face "
"quality score (depending on whether ``quality_estimator`` is ``false`` or"
" ``true`` at ``/etc/findface-extraction-api.ini``). Upright faces in "
"frontal position are considered the best quality. They result in values "
"around ``0``, mostly negative (such as ``-0.00067401276``, for example). "
"Inverted faces and large face angles are estimated with negative values "
"some ``-5`` and less."
msgstr ""

#: ../source/extraction_api.rst:167
msgid "``\"facen\"``: the face feature vector."
msgstr ""

#: ../source/extraction_api.rst:168
msgid ""
"``\"gender\"``: gender information (MALE or FEMALE) with recognition "
"accuracy if requested."
msgstr ""

#: ../source/extraction_api.rst:169
msgid "``\"age\"``: age estimate if requested."
msgstr ""

#: ../source/extraction_api.rst:170
msgid ""
"``\"emotions\"``: all available emotions in descending order of "
"probability if requested."
msgstr ""

#: ../source/extraction_api.rst:171
msgid ""
"``\"normalized\"``: a normalized face image encoded in base64 if "
"requested."
msgstr ""

#: ../source/extraction_api.rst:193
msgid "Examples"
msgstr ""

#: ../source/extraction_api.rst:196
msgid "Request #1"
msgstr ""

#: ../source/extraction_api.rst:202 ../source/extraction_api.rst:237
#: ../source/extraction_api.rst:301
msgid "Response"
msgstr ""

#: ../source/extraction_api.rst:231
msgid "Request #2"
msgstr ""

#: ../source/extraction_api.rst:295
msgid "Request #3. Auto-rotation"
msgstr ""

#: ../source/extraction_api.rst:337
msgid "Extract Facens"
msgstr ""

#: ../source/extraction_api.rst:339
msgid ""
"By default, ``findface-facenapi`` detects faces in images and sends them "
"to ``findface-nnapi`` for a facen extraction. Then ``findface-facenapi`` "
"saves the obtained facen to MongoDB and Tarantool databases. You can use "
"``Extraction API`` as a better alternative to ``findface-nnapi`` in this "
"pipeline."
msgstr ""

#: ../source/extraction_api.rst:341
msgid ""
"The main advantage of ``Extraction API`` in contrast with ``findface-"
"nnapi`` is its built-in ability to clone into multiple instances and "
"automatically balance the traffic across them, while for ``findface-"
"nnapi``, load balancing has to be manually :ref:`set up <load-balancing>`"
" via NginX."
msgstr ""

#: ../source/extraction_api.rst:343
msgid "To extract facens via ``Extraction API``, do the following:"
msgstr ""

#: ../source/extraction_api.rst:345
msgid "Open the ``findface-facenapi.ini`` configuration file::"
msgstr ""

#: ../source/extraction_api.rst:349
msgid "Uncomment and edit the ``extractor`` parameter in the following way::"
msgstr ""

#: ../source/extraction_api.rst:354
msgid "The ``findface-facenapi.ini`` content must be correct Python code."
msgstr ""

#: ../source/extraction_api.rst:356
msgid ""
"Uncomment and/or edit ``extraction_api_url`` to align with your network "
"specification::"
msgstr ""

#: ../source/extraction_api.rst:361
msgid "Start ``Extraction API`` and enable its autostart."
msgstr ""

#: ../source/extraction_api.rst:367
msgid "Restart ``findface-facenapi``."
msgstr ""

#: ../source/extraction_api.rst:373
msgid "Stop ``findface-nnapi`` and disable its autostart."
msgstr ""

#: ../source/extraction_api.rst:379
msgid ""
"Check the services status. The command will return the services "
"description, status (should be Active), path and running time."
msgstr ""

